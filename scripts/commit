#!/bin/bash -e

__commands_dir__="$(dirname "$0")/../commands"

$($__commands_dir__/is_working_tree?)
[ $? -eq 0 ]  || exit 1

help_echo () {
  echo    "Usage: commit"
  echo -e "\t -f|--files    - Regex of files to commit."
  echo -e "\t -m|--message  - Commit message to set"
  echo -e "\t -p|--push     - Set bit when you want to send to origin"
  echo -e "\t -r|--remote   - Origin name. By default it is origin"
  echo -e "\t -e|--empty    - Empty commit"
}

POSITIONAL_ARGS=()
COMMIT_FILES=""
PUSH="1"
EMPTY="1"
REMOTE="origin"
MESSAGE=""
LAST_UPDATED='none'
while [[ $# -gt 0 ]]; do
  case $1 in
    -p|--push)
      PUSH="0"
      shift # past value
      ;;
    -e|--empty)
      EMPTY="0"
      shift # past value
      ;;
    -r|--remote)
      REMOTE="$2"
      shift # past argument
      shift # past value
      ;;
    -m|--message)
      LAST_UPDATED='message'
      MESSAGE="$2"
      shift # past argument
      shift # past value
      ;;
    -f|--files)
      LAST_UPDATED='commit'
      COMMIT_FILES="$2"
      shift # past argument
      shift # past value
      ;;
    -h|--help)
      [[ -z "$SKIP_HELP_ECHO" ]] && help_echo
      exit 0
      ;;
    -*|--*)
      echo "Unknown option: $1"
      [[ -z "$SKIP_HELP_ECHO" ]] && help_echo
      exit 1
      ;;
    *)
      if [ $LAST_UPDATED = "message" ]; then
        MESSAGE="$MESSAGE $1"
      elif [ $LAST_UPDATED = "commit" ]; then
        COMMIT_FILES="$COMMIT_FILES $1"
      fi
      shift # past argument
      ;;
  esac
done

if [[ -z "$MESSAGE" ]]; then
  echo "Commit message must be present. Exit 1" >&2
  [[ -z "$SKIP_HELP_ECHO" ]] && help_echo
  exit 1
fi

if [ "$EMPTY" = "0" ]; then
  git commit --allow-empty -m "$MESSAGE"
else
  if [[ -z "$COMMIT_FILES" ]]; then
    echo "Commit regex must be present. Exit 1" >&2
    [[ -z "$SKIP_HELP_ECHO" ]] && help_echo
    exit 1
  fi

  git add "$(echo $COMMIT_FILES | tr -d '"')"
  git commit -m "$MESSAGE"
fi



if [ $PUSH = "0" ]; then
  branch_name=$($__commands_dir__/current_branch)
  git push -u $REMOTE $branch_name
fi
